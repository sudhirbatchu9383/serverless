Resources:
  CognitoUserPoolMyUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      # Generate a name based on the stage
      UserPoolName: ${self:custom.stage}-DVSA-user-pool
      # Set email as an alias
      UsernameAttributes:
        - email
      AutoVerifiedAttributes:
        - email
      Policies:
        PasswordPolicy:
            RequireLowercase: false
            RequireSymbols: false
            RequireNumbers: false
            MinimumLength: 6
            RequireUppercase: false
      Schema:
        - AttributeDataType: String
          Mutable: true
          Name: name
        - AttributeDataType: String
          Mutable: true
          Name: is_admin
          Required: false
        - AttributeDataType: String
          Mutable: false
          Name: email
          Required: true
        - Name: phone_number
          AttributeDataType: String
          Mutable: true
          Required: false

  CognitoUserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      # Generate an app client name based on the stage
      ClientName: ${self:custom.stage}-DVSA-user-pool-client
      UserPoolId:
        Ref: CognitoUserPoolMyUserPool
      ExplicitAuthFlows:
        - ADMIN_NO_SRP_AUTH
      GenerateSecret: false


# Print out the Id of the User Pool that is created
Outputs:
  UserPoolId:
    Value:
      Ref: CognitoUserPoolMyUserPool

  UserPoolClientId:
    Value:
      Ref: CognitoUserPoolClient
